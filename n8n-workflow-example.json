{
  "name": "QuoteMaster Pro - Envio de Cotações (v2)",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "quote-sender",
        "responseMode": "responseNode"
      },
      "id": "webhook-start",
      "name": "Webhook Cotações",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [200, 300]
    },
    {
      "parameters": {
        "functionCode": "// Este nó clona o item de entrada para garantir estrutura consistente\nreturn items;"
      },
      "id": "normalize",
      "name": "Normalizar Entrada",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [420, 300]
    },
    {
      "parameters": {
        "functionCode": "// Expande os fornecedores para múltiplos itens para processamento paralelo\n// Entrada esperada do Webhook: { quote, client, suppliers: [...], settings, template_data }\nconst inItem = items[0].json;\n\nif (!inItem.suppliers || !Array.isArray(inItem.suppliers) || inItem.suppliers.length === 0) {\n  return items;\n}\n\nconst out = inItem.suppliers.map((supplier) => ({\n  json: {\n    supplier,\n    quote: inItem.quote,\n    client: inItem.client,\n    settings: inItem.settings || {},\n    template_data: inItem.template_data || null\n  }\n}));\n\nreturn out;"
      },
      "id": "expand-suppliers",
      "name": "Expandir Fornecedores",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [640, 300]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.settings.send_email }}",
              "value2": true
            }
          ]
        }
      },
      "id": "if-email",
      "name": "Enviar E-mail?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [860, 180]
    },
    {
      "parameters": {
        "functionCode": "const { quote, client, supplier, settings } = $json;\n\nconst money = (v) => { try { return (new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' })).format(Number(v||0)); } catch { return `R$ ${(Number(v||0)).toFixed(2)}`; } };\nconst dateBr = (d) => { return d ? new Date(d).toLocaleString('pt-BR') : 'A definir'; };\n\nconst html = `\n<div style=\"font-family: Arial, sans-serif; max-width: 640px; margin: 0 auto;\">\n  <h2 style=\"color:#003366;\">🏢 Nova Cotação Disponível</h2>\n  <div style=\"background:#f6f8fa; padding:16px; border-radius:8px; margin:12px 0;\">\n    <p><strong>📋 Cotação:</strong> ${quote.title}</p>\n    <p><strong>🆔 ID:</strong> ${quote.id}</p>\n    <p><strong>💰 Total Estimado:</strong> ${money(quote.total)}</p>\n    <p><strong>📅 Prazo:</strong> ${dateBr(quote.deadline)}</p>\n    <p><strong>👤 Cliente:</strong> ${client.name}</p>\n    <p><strong>📧 E-mail:</strong> ${client.email || '—'}</p>\n    ${client.phone ? `<p><strong>📱 Telefone:</strong> ${client.phone}</p>` : ''}\n  </div>\n  <h3 style=\"color:#003366;\">📦 Itens (${(quote.items||[]).length})</h3>\n  <table style=\"width:100%; border-collapse: collapse;\">\n    <thead>\n      <tr style=\"background:#003366; color:#fff;\">\n        <th style=\"padding:8px; border:1px solid #ddd; text-align:left;\">Produto</th>\n        <th style=\"padding:8px; border:1px solid #ddd; text-align:center;\">Qtd</th>\n        <th style=\"padding:8px; border:1px solid #ddd; text-align:right;\">Unit.</th>\n        <th style=\"padding:8px; border:1px solid #ddd; text-align:right;\">Total</th>\n      </tr>\n    </thead>\n    <tbody>\n      ${(quote.items||[]).map(i => `\n        <tr>\n          <td style=\"padding:8px; border:1px solid #ddd;\">${i.product_name}</td>\n          <td style=\"padding:8px; border:1px solid #ddd; text-align:center;\">${i.quantity}</td>\n          <td style=\"padding:8px; border:1px solid #ddd; text-align:right;\">${money(i.unit_price)}</td>\n          <td style=\"padding:8px; border:1px solid #ddd; text-align:right;\"><strong>${money(i.total)}</strong></td>\n        </tr>`).join('')}\n    </tbody>\n  </table>\n  ${settings.custom_message ? `<div style=\"background:#e8f4f8; padding:12px; border-radius:6px; margin:16px 0;\"><strong>💬 Mensagem:</strong><br/>${settings.custom_message}</div>` : ''}\n  <div style=\"color:#6b7280; font-size:12px; text-align:center; margin-top:16px;\"><em>Enviado automaticamente via QuoteMaster Pro</em></div>\n</div>`;\n\nreturn { to: supplier.email, subject: `📋 Nova Cotação: ${quote.title} (ID: ${quote.id})`, html };"
      },
      "id": "prepare-email",
      "name": "Preparar E-mail",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1100, 180]
    },
    {
      "parameters": {
        "fromEmail": "noreply@quotemaster.pro",
        "toEmail": "={{ $json.to }}",
        "subject": "={{ $json.subject }}",
        "emailFormat": "html",
        "html": "={{ $json.html }}"
      },
      "id": "send-email",
      "name": "Enviar E-mail",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [1340, 180]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.settings.send_whatsapp }}",
              "value2": true
            }
          ]
        }
      },
      "id": "if-whatsapp",
      "name": "Enviar WhatsApp?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [860, 420]
    },
    {
      "parameters": {
        "functionCode": "// Log para debug\nconsole.log('Dados recebidos:', JSON.stringify($json, null, 2));\n\nconst { quote, client, supplier, settings } = $json;\n\n// Verificação de segurança\nif (!quote || !client || !supplier) {\n  console.error('Dados obrigatórios faltando:', { quote: !!quote, client: !!client, supplier: !!supplier });\n  return { error: 'Dados obrigatórios faltando' };\n}\n\nconst money = (v) => {\n  try {\n    return new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(Number(v || 0));\n  } catch {\n    return `R$ ${(Number(v || 0)).toFixed(2)}`;\n  }\n};\n\nconst dateBr = (d) => {\n  return d ? new Date(d).toLocaleString('pt-BR') : 'A definir';\n};\n\n// Verificar se items existe e é array\nconst items = Array.isArray(quote.items) ? quote.items : [];\nconsole.log('Items processados:', items.length);\n\nconst itens = items.map(i => {\n  const productName = i.product_name || i.name || 'Produto não especificado';\n  const quantity = i.quantity || 0;\n  const total = i.total || (i.unit_price * quantity) || 0;\n  return `• ${productName} - Qtd: ${quantity} - Valor: ${money(total)}`;\n}).join('\\n');\n\n// Se não tem itens, usar mensagem padrão\nconst itemsText = items.length > 0 ? `📦 *Itens:*\\n${itens}\\n` : '📦 *Itens:* Consulte detalhes na cotação\\n';\n\nconst baseMessage = `🔔 *Nova Cotação Disponível*\\n\\n👋 Olá, ${supplier.name}!\\n\\n📋 *${quote.title || 'Cotação'}*\\n${quote.description ? quote.description + '\\n' : ''}\\n💰 *Total Estimado:* ${money(quote.total || 0)}\\n📅 *Prazo:* ${dateBr(quote.deadline)}\\n\\n${itemsText}`;\n\nconst customMessage = settings?.custom_message;\nlet finalMessage;\n\nif (customMessage) {\n  // Se tem template customizado, usar ele\n  finalMessage = customMessage\n    .replace(/{{quote\\.title}}/g, quote.title || 'Cotação')\n    .replace(/{{quote\\.total}}/g, money(quote.total || 0))\n    .replace(/{{quote\\.deadline}}/g, dateBr(quote.deadline))\n    .replace(/{{client\\.name}}/g, client.name || 'Cliente')\n    .replace(/{{supplier\\.name}}/g, supplier.name || 'Fornecedor')\n    .replace(/{{items_list}}/g, items.length > 0 ? itens : 'Consulte detalhes na cotação');\n} else {\n  finalMessage = baseMessage;\n}\n\n// Adicionar informações do cliente\nfinalMessage += `\\n👤 *Cliente:* ${client.name || 'Não informado'}`;\nfinalMessage += `\\n📧 *E-mail:* ${client.email || '—'}`;\nif (client.phone) {\n  finalMessage += `\\n📱 *Telefone:* ${client.phone}`;\n}\nfinalMessage += '\\n\\n—\\n_Cotação enviada via QuoteMaster Pro_';\n\nconsole.log('Mensagem final preparada:', finalMessage.substring(0, 200) + '...');\n\nreturn {\n  phone: supplier.whatsapp || supplier.phone,\n  text: finalMessage,\n  evolution: settings?.evolution || null\n};"
      },
      "id": "prepare-whatsapp",
      "name": "Preparar WhatsApp",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1100, 420]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{ $json.evolution && $json.evolution.api_url && $json.evolution.instance ? $json.evolution.api_url + '/message/sendText/' + $json.evolution.instance : 'https://example.invalid/send' }}",
        "jsonParameters": true,
        "options": {
          "headers": {
            "apikey": "={{ $json.evolution && $json.evolution.token ? $json.evolution.token : '' }}",
            "Content-Type": "application/json"
          }
        },
        "sendBody": true,
        "bodyParametersJson": "={ \n  \"number\": $json.phone,\n  \"text\": $json.text\n}"
      },
      "id": "send-whatsapp",
      "name": "Enviar WhatsApp (Evolution)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1340, 420]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={ \n  \"success\": true, \n  \"message\": \"Cotações processadas\", \n  \"processed_suppliers\": {{ $items().length }},\n  \"timestamp\": \"{{ new Date().toISOString() }}\" \n}"
      },
      "id": "respond",
      "name": "Responder",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1580, 300]
    }
  ],
  "connections": {
    "Webhook Cotações": {
      "main": [
        [
          {
            "node": "Normalizar Entrada",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Normalizar Entrada": {
      "main": [
        [
          {
            "node": "Expandir Fornecedores",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Expandir Fornecedores": {
      "main": [
        [
          {
            "node": "Enviar E-mail?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Enviar WhatsApp?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Responder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar E-mail?": {
      "main": [
        [
          {
            "node": "Preparar E-mail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preparar E-mail": {
      "main": [
        [
          {
            "node": "Enviar E-mail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar WhatsApp?": {
      "main": [
        [
          {
            "node": "Preparar WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preparar WhatsApp": {
      "main": [
        [
          {
            "node": "Enviar WhatsApp (Evolution)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    { "id": "qmp", "name": "QuoteMaster Pro" }
  ],
  "triggerCount": 1,
  "versionId": "2"
}
