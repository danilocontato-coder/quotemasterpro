{
  "name": "QuoteMaster Pro - Envio de Cota√ß√µes",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "quote-sender",
        "responseMode": "responseNode"
      },
      "id": "webhook-start",
      "name": "Webhook Cota√ß√µes",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "split-suppliers",
      "name": "Split Fornecedores",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [460, 300],
      "description": "Processa cada fornecedor individualmente para envio paralelo"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.settings.send_email }}",
              "value2": true
            }
          ]
        }
      },
      "id": "check-email",
      "name": "Enviar E-mail?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [680, 200]
    },
    {
      "parameters": {
        "functionCode": "// Processar dados dos suppliers para email\nconst quote = $json.quote;\nconst client = $json.client;\nconst suppliers = $json.suppliers;\nconst settings = $json.settings;\n\n// Para cada supplier, criar dados do email\nconst results = [];\n\nsuppliers.forEach(supplier => {\n  const emailContent = `\n<div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n  <h2 style=\"color: #003366;\">üè¢ Nova Cota√ß√£o Dispon√≠vel</h2>\n  \n  <div style=\"background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0;\">\n    <p><strong>üìã Cota√ß√£o:</strong> ${quote.title}</p>\n    <p><strong>üÜî ID:</strong> ${quote.id}</p>\n    <p><strong>üí∞ Total Estimado:</strong> R$ ${quote.total?.toFixed(2) || 'A calcular'}</p>\n    <p><strong>üìÖ Prazo:</strong> ${quote.deadline ? new Date(quote.deadline).toLocaleDateString('pt-BR') : 'A definir'}</p>\n    <p><strong>üë§ Cliente:</strong> ${client.name}</p>\n    <p><strong>üìß Email:</strong> ${client.email}</p>\n    ${client.phone ? `<p><strong>üì± Telefone:</strong> ${client.phone}</p>` : ''}\n  </div>\n\n  <h3 style=\"color: #003366;\">üì¶ Itens da Cota√ß√£o (${quote.items.length})</h3>\n  <table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\">\n    <thead>\n      <tr style=\"background-color: #003366; color: white;\">\n        <th style=\"padding: 10px; border: 1px solid #ddd;\">Produto</th>\n        <th style=\"padding: 10px; border: 1px solid #ddd;\">Quantidade</th>\n        <th style=\"padding: 10px; border: 1px solid #ddd;\">Valor Unit.</th>\n        <th style=\"padding: 10px; border: 1px solid #ddd;\">Total</th>\n      </tr>\n    </thead>\n    <tbody>\n      ${quote.items.map(item => `\n        <tr>\n          <td style=\"padding: 10px; border: 1px solid #ddd;\">${item.product_name}</td>\n          <td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">${item.quantity}</td>\n          <td style=\"padding: 10px; border: 1px solid #ddd; text-align: right;\">R$ ${item.unit_price?.toFixed(2) || '0,00'}</td>\n          <td style=\"padding: 10px; border: 1px solid #ddd; text-align: right;\"><strong>R$ ${item.total?.toFixed(2) || '0,00'}</strong></td>\n        </tr>\n      `).join('')}\n    </tbody>\n  </table>\n\n  ${settings.custom_message ? `\n  <div style=\"background-color: #e8f4f8; padding: 15px; border-radius: 5px; margin: 20px 0;\">\n    <h4 style=\"color: #003366; margin-top: 0;\">üí¨ Mensagem do Cliente:</h4>\n    <p style=\"margin-bottom: 0;\">${settings.custom_message}</p>\n  </div>\n  ` : ''}\n\n  <div style=\"background-color: #f1f1f1; padding: 15px; border-radius: 5px; margin: 20px 0; text-align: center;\">\n    <p style=\"margin: 0; color: #666;\"><em>üì± Enviado automaticamente via QuoteMaster Pro</em></p>\n  </div>\n</div>\n`;\n\n  results.push({\n    to: supplier.email,\n    subject: `üìã Nova Cota√ß√£o: ${quote.title} (ID: ${quote.id})`,\n    html: emailContent,\n    supplier: supplier,\n    quote: quote\n  });\n});\n\nreturn results;"
      },
      "id": "prepare-email",
      "name": "Preparar E-mail",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [900, 180]
    },
    {
      "parameters": {
        "fromEmail": "noreply@quotemaster.pro",
        "toEmail": "={{ $json.to }}",
        "subject": "={{ $json.subject }}",
        "emailFormat": "html",
        "html": "={{ $json.html }}"
      },
      "id": "send-email",
      "name": "Enviar E-mail",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [1120, 180]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.settings.send_whatsapp }}",
              "value2": true
            }
          ]
        }
      },
      "id": "check-whatsapp",
      "name": "Enviar WhatsApp?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [680, 400]
    },
    {
      "parameters": {
        "functionCode": "// Processar dados do supplier atual do batch\nconst quote = $json.quote;\nconst client = $json.client;\nconst suppliers = $json.suppliers;\nconst settings = $json.settings;\nconst templateData = $json.template_data;\n\n// Para cada supplier no batch\nconst results = [];\n\nsuppliers.forEach(supplier => {\n  let whatsappMessage = settings.custom_message;\n  \n  // Se temos template, usar formata√ß√£o do template\n  if (templateData && templateData.template_name) {\n    whatsappMessage = settings.custom_message; // J√° formatado no Edge Function\n  }\n  \n  // Formato final da mensagem\n  const finalMessage = whatsappMessage || `üîî *Nova Cota√ß√£o Dispon√≠vel*\\n\\nüëã Ol√°, ${supplier.name}!\\n\\nüìã *${quote.title}*\\n${quote.description || ''}\\n\\nüí∞ *Total Estimado:* R$ ${quote.total?.toFixed(2) || 'A calcular'}\\nüìÖ *Prazo:* ${quote.deadline ? new Date(quote.deadline).toLocaleDateString('pt-BR') : 'A definir'}\\n\\nüì¶ *Itens (${quote.items.length}):*\\n${quote.items.map(item => \\n    `‚Ä¢ ${item.product_name} - Qtd: ${item.quantity} - R$ ${item.total?.toFixed(2) || '0,00'}`\\n  ).join('\\\\n')}\\n\\nüë§ *Cliente:* ${client.name}\\nüìß *Contato:* ${client.email}\\n${client.phone ? `üì± *Telefone:* ${client.phone}` : ''}\\n\\n---\\n_Cota√ß√£o enviada via QuoteMaster Pro_`;\n  \n  results.push({\n    phone: supplier.whatsapp || supplier.phone,\n    message: finalMessage,\n    supplier: supplier,\n    quote_id: quote.id,\n    evolution: settings.evolution\n  });\n});\n\nreturn results;"
      },
      "id": "prepare-whatsapp",
      "name": "Preparar WhatsApp",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [900, 420]
    },
    {
      "parameters": {
        "url": "={{ $json.evolution && $json.evolution.api_url ? $json.evolution.api_url + '/message/sendText/' + $json.evolution.instance : 'https://api.whatsapp.local/send' }}",
        "options": {
          "headers": {
            "apikey": "={{ $json.evolution && $json.evolution.token ? $json.evolution.token : 'SUA_API_KEY_AQUI' }}",
            "Content-Type": "application/json"
          }
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $json.phone }}"
            },
            {
              "name": "text",
              "value": "={{ $json.message }}"
            }
          ]
        }
      },
      "id": "send-whatsapp",
      "name": "Enviar WhatsApp",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1120, 420],
      "description": "Envia mensagem via Evolution API ou provider padr√£o"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{ \"success\": true, \"message\": \"Cota√ß√µes enviadas com sucesso para {{ $('Split Fornecedores').params.suppliers.length }} fornecedor(es)\", \"processed_suppliers\": {{ $('Split Fornecedores').params.suppliers.length }}, \"timestamp\": \"{{ new Date().toISOString() }}\" }"
      },
      "id": "response",
      "name": "Resposta",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1340, 300],
      "description": "Resposta final com contagem de fornecedores processados"
    }
  ],
  "connections": {
    "Webhook Cota√ß√µes": {
      "main": [
        [
          {
            "node": "Split Fornecedores",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Fornecedores": {
      "main": [
        [
          {
            "node": "Enviar E-mail?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Enviar WhatsApp?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar E-mail?": {
      "main": [
        [
          {
            "node": "Preparar E-mail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preparar E-mail": {
      "main": [
        [
          {
            "node": "Enviar E-mail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar E-mail": {
      "main": [
        [
          {
            "node": "Resposta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar WhatsApp?": {
      "main": [
        [
          {
            "node": "Preparar WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preparar WhatsApp": {
      "main": [
        [
          {
            "node": "Enviar WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar WhatsApp": {
      "main": [
        [
          {
            "node": "Resposta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {},
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-01-15T10:00:00.000Z",
      "updatedAt": "2024-01-15T10:00:00.000Z",
      "id": "1",
      "name": "QuoteMaster Pro"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-01-15T10:00:00.000Z",
  "versionId": "1"
}