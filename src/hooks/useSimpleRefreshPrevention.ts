import { useEffect } from 'react';

/**
 * Hook simples para prevenir refreshes automÃ¡ticos
 * NÃ£o usa useAuth para evitar conflitos com o sistema de autenticaÃ§Ã£o
 */
export const useSimpleRefreshPrevention = () => {
  useEffect(() => {
    // Interceptar tentativas de refresh via teclado em desenvolvimento
    const handleKeyDown = (e: KeyboardEvent) => {
      if (process.env.NODE_ENV === 'development') {
        if (e.key === 'F5' || (e.ctrlKey && e.key === 'r')) {
          console.log('ðŸš« [REFRESH-PREVENTION] Refresh intercepted - use hot reload instead');
          // NÃ£o prevenir completamente, apenas logar
        }
      }
    };

    // Prevenir comportamentos problemÃ¡ticos de beforeunload
    const handleBeforeUnload = (e: BeforeUnloadEvent) => {
      // NÃ£o mostrar aviso por padrÃ£o - apenas em casos especÃ­ficos
      if (e.defaultPrevented) {
        return;
      }
      return undefined;
    };

    // Adicionar listeners
    document.addEventListener('keydown', handleKeyDown);
    window.addEventListener('beforeunload', handleBeforeUnload);

    return () => {
      document.removeEventListener('keydown', handleKeyDown);
      window.removeEventListener('beforeunload', handleBeforeUnload);
    };
  }, []); // Sem dependÃªncias para evitar conflitos

  return null;
};